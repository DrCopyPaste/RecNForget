<UserControl x:Class="RecNForget.Controls.RecordingTimerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RecNForget.Controls" d:DataContext="{d:DesignInstance Type=local:RecordingTimerControl}"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Themes\Simple_White.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <local:StringToTimeSpanConverter x:Key="_StringToTimeSpanConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Border Style="{DynamicResource DefaultControlBorderStyle}" HorizontalAlignment="Stretch">
        <StackPanel>
            <Label Style="{DynamicResource ControlLabelStyle}"
                    Content="Recording timers (d:hh:mm:ss)"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <CheckBox Grid.Column="0" Style="{DynamicResource DefaultCheckboxStyle}"
                        HorizontalAlignment="Stretch"
                        IsChecked="{Binding Path=SettingService.RecordingTimerStopAfterIsEnabled}">
                    <DockPanel HorizontalAlignment="Right">
                        <Label HorizontalAlignment="Left" >Stop after</Label>
                        <local:TimeSpanTextBox Style="{DynamicResource TimeSpanTextBoxStyle2}" Background="{DynamicResource Transparent_Brush}"
                            x:Name="StopAfterTimeSpanTextBox"
                            IsEnabled="{Binding Path=ActionService.TimerForRecordingStopAfterNotRunning, RelativeSource={RelativeSource AncestorType=local:RecordingTimerControl}, UpdateSourceTrigger=PropertyChanged}"
                            TimerBoundTextValueTimeSpan="{Binding Path=ActionService.CurrentRecordingStopAfterTimer, RelativeSource={RelativeSource AncestorType=local:RecordingTimerControl}, UpdateSourceTrigger=PropertyChanged}"
                            SettingTextValueTimeSpan="{Binding Path=SettingService.RecordingTimerStopAfterMax, RelativeSource={RelativeSource AncestorType=local:RecordingTimerControl}, StringFormat=d\\:hh\\:mm\\:ss, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            />
                    </DockPanel>
                </CheckBox>
                <CheckBox Grid.Column="1" Style="{DynamicResource DefaultCheckboxStyle}"
                        HorizontalAlignment="Stretch"
                        IsChecked="{Binding Path=SettingService.RecordingTimerStartAfterIsEnabled}">
                    <DockPanel HorizontalAlignment="Right">
                        <Label HorizontalAlignment="Left" >Start after</Label>
                        <local:TimeSpanTextBox Style="{DynamicResource TimeSpanTextBoxStyle2}" Background="{DynamicResource Transparent_Brush}"
                            x:Name="StartAfterTimeSpanTextBox"
                            IsEnabled="{Binding Path=ActionService.TimerForRecordingStartAfterNotRunning, RelativeSource={RelativeSource AncestorType=local:RecordingTimerControl}, UpdateSourceTrigger=PropertyChanged}"
                            TimerBoundTextValueTimeSpan="{Binding Path=ActionService.CurrentRecordingStartAfterTimer, RelativeSource={RelativeSource AncestorType=local:RecordingTimerControl}, UpdateSourceTrigger=PropertyChanged}"
                            SettingTextValueTimeSpan="{Binding Path=SettingService.RecordingTimerStartAfterMax, RelativeSource={RelativeSource AncestorType=local:RecordingTimerControl}, StringFormat=d\\:hh\\:mm\\:ss, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            />
                    </DockPanel>
                </CheckBox>
            </Grid>
        </StackPanel>
    </Border>
</UserControl>
