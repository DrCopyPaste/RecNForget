<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:RecNForget.Controls" xmlns:Sys="clr-namespace:System;assembly=mscorlib" xmlns:svg1="clr-namespace:SVGImage.SVG;assembly=DotNetProjects.SVGImage">

    <!-- ===================================================  Sizes/Margins/Paddings =======================================================================================================  -->

    <!-- Control Heights/Widths -->
    <Sys:Double x:Key="MainWindow_TextBox_Width">300</Sys:Double>

    <Sys:Double x:Key="HotkeyPromptWindow_Width">355</Sys:Double>

    <Sys:Double x:Key="TitleRow_Height">15</Sys:Double>
    <Sys:Double x:Key="TitleRow_ColumnWidth">15</Sys:Double>

    <Sys:Double x:Key="ButtonRow_Height">31</Sys:Double>
    <Sys:Double x:Key="ChangeSettingButton_Width">25</Sys:Double>
    <Sys:Double x:Key="CheckBoxControl_Height">22</Sys:Double>
    <Sys:Double x:Key="CheckBox_Width">20</Sys:Double>

    <Sys:Double x:Key="HalfButtonCell_Height">30</Sys:Double>
    <Sys:Double x:Key="HalfButtonCell_Width">50</Sys:Double>
    <Sys:Double x:Key="FatButtonCell_Width">109</Sys:Double>

    <Sys:Double x:Key="SettingTextBox_Width">250</Sys:Double>

    <Sys:Double x:Key="PatchNotes_TextBox_Width">800</Sys:Double>
    <Sys:Double x:Key="PatchNotes_TextBox_Height">300</Sys:Double>

    <Sys:Double x:Key="SeparatorRow_Height">2</Sys:Double>
    <Sys:Double x:Key="SeparatorTitleRow_Height">15</Sys:Double>
    <Sys:Double x:Key="MainWindowControl_InnerWidth">21</Sys:Double>
    <Sys:Double x:Key="MainWindowControl_Height">23</Sys:Double>
    <Sys:Double x:Key="MainWindowControl_HeightWithMargin">25</Sys:Double>

    <Sys:Double x:Key="Paragraph_Separator_Height">9</Sys:Double>
    <Sys:Double x:Key="Control_Separator_Height">5</Sys:Double>

    <Sys:Double x:Key="CreditsBox_Height">150</Sys:Double>

    <!-- Font Sizes -->
    <Sys:Double x:Key="Default_FontSize">12</Sys:Double>
    <Sys:Double x:Key="SmallCaption_FontSize">10</Sys:Double>

    <Sys:Double x:Key="Heading_1_FontSize">45</Sys:Double>
    <Sys:Double x:Key="Heading_2_FontSize">20</Sys:Double>
    <Sys:Double x:Key="Heading_3_FontSize">18</Sys:Double>

    <!-- /===================================================  SizesMarginsPaddings  ================================================================================================?======  -->

    <!-- ====================================================  Colors  ===================================================================================================================  -->

    <!-- New Unified SVG Colors-->

    <Color x:Key="Control_Foreground_Color">Black</Color>
    <Color x:Key="Control_ForegroundFocused_Color">Black</Color>
    <Color x:Key="Control_ForegroundHover_Color">Black</Color>
    <Color x:Key="Control_ForegroundPressed_Color">Black</Color>
    <Color x:Key="Control_ForegroundDisabled_Color">#dddddd</Color>

    <Brush x:Key="Control_Foreground_Brush">Black</Brush>
    <Brush x:Key="Control_ForegroundFocused_Brush">Black</Brush>
    <Brush x:Key="Control_ForegroundHover_Brush">Black</Brush>
    <Brush x:Key="Control_ForegroundPressed_Brush">Black</Brush>
    <Brush x:Key="Control_ForegroundDisabled_Brush">#dddddd</Brush>

    <Brush x:Key="Control_Background_Brush">White</Brush>
    <Brush x:Key="Control_BackgroundFocused_Brush">White</Brush>
    <Brush x:Key="Control_BackgroundHover_Brush">White</Brush>
    <Brush x:Key="Control_BackgroundPressed_Brush">White</Brush>
    <Brush x:Key="Control_BackgroundDisabled_Brush">White</Brush>

    <Brush x:Key="Control_Transparent_Brush">Transparent</Brush>

    <!-- /New Unified SVG Colors-->


    <!-- COLORS APPLICATION-->
    <Sys:String x:Key="ApplicationBorder_Color">Black</Sys:String>
    <Sys:String x:Key="HeaderRow_Background_Color">LightGray</Sys:String>
    <Sys:String x:Key="Application_Background_Color">White</Sys:String>
    <Sys:String x:Key="ActionButtonRow_Background_Color">LightGray</Sys:String>
    <Sys:String x:Key="Font_Color">Black</Sys:String>
    <Sys:String x:Key="Font_Color_Disabled">Gray</Sys:String>

    <Sys:String x:Key="ControlBackground_Color">Transparent</Sys:String>

    <!-- COLORS HEADER BUTTONS-->
    <Sys:String x:Key="HeaderButton_Enabled_Color">Transparent</Sys:String>
    <Sys:String x:Key="HeaderButton_Disabled_Color">#dddddd</Sys:String>
    <Sys:String x:Key="HeaderButton_Hover_Color">#eeeeee</Sys:String>
    <Sys:String x:Key="HeaderButton_Pressed_Color">White</Sys:String>
    <Sys:String x:Key="HeaderButtonBorder_Color">Transparent</Sys:String>
    <Sys:String x:Key="HeaderButtonBorder_Focused_Color">White</Sys:String>


    <!-- COLORS ACTION BUTTONS-->
    <Sys:String x:Key="ActionButton_Enabled_Color">White</Sys:String>
    <Sys:String x:Key="ActionButton_Disabled_Color">White</Sys:String>
    <Sys:String x:Key="ActionButton_Hover_Color">#dddddd</Sys:String>
    <Sys:String x:Key="ActionButton_Pressed_Color">#dddddd</Sys:String>

    <Sys:String x:Key="ActionButtonBorder_Color">#cccccc</Sys:String>
    <Sys:String x:Key="ActionButtonBorder_Focused_Color">Black</Sys:String>

    <!-- /===================================================  Colors  ===================================================================================================================  -->
    
    <!-- ===================================================  Images  ====================================================================================================================  -->

    <Style x:Key="About_Logo_Style" TargetType="Image">
        <Setter Property="Width" Value="100" />
        <Setter Property="Margin" Value="1,0,15,0" />
        <Setter Property="Source" Value="..\Images\logo_big.png" />
    </Style>

    <Style x:Key="FeatureClass_Image_Style" TargetType="{x:Type svg1:SVGImage}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="3,3,5,3" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Width" Value="15" />
    </Style>

    <Style x:Key="AddedFeature_Image_Style" TargetType="{x:Type svg1:SVGImage}" BasedOn="{StaticResource FeatureClass_Image_Style}">
        <Setter Property="Source" Value="/RecNForget.Controls;component/Themes/SvgImages/plus_icon171498.svg" />
        <Setter Property="OverrideColor" Value="{Binding Source={StaticResource Control_Foreground_Color}}" />
    </Style>

    <Style x:Key="BugFix_Image_Style" TargetType="{x:Type svg1:SVGImage}" BasedOn="{StaticResource FeatureClass_Image_Style}">
        <Setter Property="Source" Value="/RecNForget.Controls;component/Themes/SvgImages/bugfix_icon140609.svg" />
        <Setter Property="OverrideColor" Value="{Binding Source={StaticResource Control_Foreground_Color}}" />
    </Style>

    <Style x:Key="VerboseInformationFeature_Image_Style" TargetType="{x:Type svg1:SVGImage}" BasedOn="{StaticResource FeatureClass_Image_Style}">
        <Setter Property="Source" Value="/RecNForget.Controls;component/Themes/SvgImages/information_icon2132.svg" />
        <Setter Property="OverrideColor" Value="{Binding Source={StaticResource Control_Foreground_Color}}" />
    </Style>

    <Style x:Key="CustomMessageBoxDefaultIconStyle" TargetType="{x:Type svg1:SVGImage}">
        <!-- TODO Logo HERE! <Setter Property="Source" Value="..\Images\logo_big.png" />-->
        <Setter Property="Source" Value="/RecNForget.Controls;component/Themes/SvgImages/message_info_icon277439.svg" />
        <Setter Property="OverrideColor" Value="{Binding Source={StaticResource Control_Foreground_Color}}" />
        <Setter Property="Height" Value="80" />
        <Setter Property="Width" Value="80" />
        <Setter Property="Margin" Value="4,4,4,4" />
    </Style>

    <Style x:Key="CustomMessageBoxInformationIconStyle" TargetType="{x:Type svg1:SVGImage}" BasedOn="{StaticResource CustomMessageBoxDefaultIconStyle}">
        <Setter Property="Source" Value="/RecNForget.Controls;component/Themes/SvgImages/message_info_icon277439.svg" />
        <Setter Property="OverrideColor" Value="{Binding Source={StaticResource Control_Foreground_Color}}" />
        <Setter Property="Margin" Value="4,4,4,4" />
    </Style>

    <Style x:Key="CustomMessageBoxQuestionIconStyle" TargetType="{x:Type svg1:SVGImage}" BasedOn="{StaticResource CustomMessageBoxDefaultIconStyle}">
        <Setter Property="Source" Value="/RecNForget.Controls;component/Themes/SvgImages/message_question_icon109120.svg" />
    </Style>

    <Style x:Key="CustomMessageBoxErrorIconStyle" TargetType="{x:Type svg1:SVGImage}" BasedOn="{StaticResource CustomMessageBoxDefaultIconStyle}">
        <Setter Property="Source" Value="/RecNForget.Controls;component/Themes/SvgImages/message_error_icon304479.svg" />
    </Style>

    <Style x:Key="QuickTip_LightBulbIconStyle" TargetType="{x:Type svg1:SVGImage}" BasedOn="{StaticResource CustomMessageBoxDefaultIconStyle}">
        <Setter Property="Source" Value="/RecNForget.Controls;component/Themes/SvgImages/lightbulb_icon372420.svg" />
    </Style>

    <!-- /==================================================  Images  ====================================================================================================================  -->
    
    <!-- ===================================================  Borders  ===================================================================================================================  -->

    <!-- seemingly transparent brush that is technically not transparent, to enable "aura" of main window where a mouse enter event will trigger visibiity changes
            Because setting to transparent would not trigger that hit box test-->
    <SolidColorBrush x:Key="TransparentBrush" Color="{Binding Source={StaticResource Application_Background_Color}}" Opacity="0.005">
    </SolidColorBrush>

    <Style x:Key="OuterHitBoxindowBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="CornerRadius" Value="3,3,3,3" />
        <Setter Property="Padding" Value="7,2,7,7" />
        <Setter Property="Visibility" Value="Visible" />
    </Style>

    <Style x:Key="OptionalTitleBarWindowBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{Binding Source={StaticResource ApplicationBorder_Color}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="CornerRadius" Value="3,3,3,3" />
        <Setter Property="Padding" Value="2,2,2,2" />
    </Style>

    <Style x:Key="DefaultWindowBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderBrush" Value="{Binding Source={StaticResource ApplicationBorder_Color}}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="3,3,3,3" />
        <Setter Property="Padding" Value="2,2,2,2" />
    </Style>

    <Style x:Key="DefaultControlBorderStyle" TargetType="{x:Type Border}" BasedOn="{StaticResource DefaultWindowBorderStyle}">
        <Setter Property="Margin" Value="0,0,0,5" />
        <Setter Property="CornerRadius" Value="3,3,3,3" />
    </Style>

    <!-- /==================================================  Borders  ===================================================================================================================  -->
    
    <!-- ===================================================  BaseButtons  ===============================================================================================================  -->

    <Style x:Key="BaseSettingButtonLayout" TargetType="Button">
        <!-- Some setters -->
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="ButtonBorder"
                       BorderThickness="1"
                       Padding="2,2,2,2"
                       BorderBrush="{Binding Source={StaticResource Application_Background_Color}}"
                       CornerRadius="3"
                       Background="{TemplateBinding Background}">
                        <Grid Name="ButtonGrid">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="content"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{Binding Source={StaticResource ActionButtonBorder_Focused_Color}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{Binding Source={StaticResource ActionButtonBorder_Focused_Color}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{Binding Source={StaticResource ActionButtonBorder_Focused_Color}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{Binding Source={StaticResource Application_Background_Color}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--
        Default Button style
    -->
    <Style x:Key="SvgBaseButtonLayout" TargetType="{x:Type local:SvgImageButton1}">
         <!--Some setters--> 
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ImagePadding" Value="0" />
        <Setter Property="ImageMargin" Value="0" />
        <Setter Property="Background" Value="{Binding Source={StaticResource Control_Background_Brush}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SvgImageButton1}">
                    <Grid Background="{TemplateBinding Background}">
                        <Border
                            Name="ImageButtonBorder"
                            Padding="{Binding ImagePadding, RelativeSource={RelativeSource TemplatedParent}}"
                            Margin="{Binding ImageMargin, RelativeSource={RelativeSource TemplatedParent}}"
                            CornerRadius="3"
                            BorderBrush="{Binding Source={StaticResource Control_Transparent_Brush}}"
                            BorderThickness="1">
                            <svg1:SVGImage Name="ImageContent" Source="{TemplateBinding DefaultImage}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" OverrideColor="{Binding Source={StaticResource Control_Foreground_Color}}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--Some triggers ( IsFocused, IsMouseOver, etc.)-->
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="ImageButtonBorder" Property="BorderBrush" Value="{Binding Source={StaticResource Control_ForegroundFocused_Brush}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ImageContent" Property="Source" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedImage}" />
                            <Setter TargetName="ImageButtonBorder" Property="Background" Value="{Binding Source={StaticResource Control_BackgroundHover_Brush}}" />
                            <Setter TargetName="ImageButtonBorder" Property="BorderBrush" Value="{Binding Source={StaticResource Control_ForegroundHover_Brush}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ImageContent" Property="Source" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedImage}" />
                            <Setter TargetName="ImageContent" Property="OverrideColor" Value="{Binding Source={StaticResource Control_ForegroundPressed_Color}}" />
                            <Setter TargetName="ImageButtonBorder" Property="Background" Value="{Binding Source={StaticResource Control_BackgroundPressed_Brush}}" />
                            <Setter TargetName="ImageButtonBorder" Property="BorderBrush" Value="{Binding Source={StaticResource Control_ForegroundPressed_Brush}}" />
                            <Setter TargetName="ImageButtonBorder" Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ImageContent" Property="Source" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DisabledImage}" />
                            <Setter TargetName="ImageContent" Property="OverrideColor" Value="{Binding Source={StaticResource Control_ForegroundDisabled_Color}}" />
                            <Setter TargetName="ImageButtonBorder" Property="Background" Value="{Binding Source={StaticResource Control_BackgroundDisabled_Brush}}" />
                            <Setter TargetName="ImageButtonBorder" Property="BorderBrush" Value="{Binding Source={StaticResource Control_BackgroundDisabled_Brush}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SvgHalfActionButtonLayout" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgBaseButtonLayout}">
        <Setter Property="ImagePadding" Value="4,4,4,4" />
        <Setter Property="ImageMargin" Value="7,1,7,1" />
        <Setter Property="Height" Value="{Binding Source={StaticResource HalfButtonCell_Height}}" />
        <Setter Property="Width" Value="{Binding Source={StaticResource HalfButtonCell_Width}}" />
    </Style>
    
    <Style x:Key="SvgHalfActionButtonSmallIconLayout" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgHalfActionButtonLayout}">
        <Setter Property="ImagePadding" Value="8,8,8,8" />
        <Setter Property="ImageMargin" Value="4,1,4,1" />
        <Setter Property="Height" Value="{Binding Source={StaticResource HalfButtonCell_Height}}" />
        <Setter Property="Width" Value="{Binding Source={StaticResource HalfButtonCell_Width}}" />
    </Style>

    <Style x:Key="SvgBaseMiniChangeSettingButtonLayout" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgBaseButtonLayout}">
        <Setter Property="ImagePadding" Value="2,2,2,2" />
        <Setter Property="ImageMargin" Value="0,0,0,0" />
        <Setter Property="Height" Value="{Binding Source={StaticResource MainWindowControl_InnerWidth}}" />
        <Setter Property="Width" Value="{Binding Source={StaticResource MainWindowControl_InnerWidth}}" />
    </Style>

    <Style x:Key="SvgBaseHeaderButtonLayout" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgBaseButtonLayout}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Height" Value="{Binding Source={StaticResource TitleRow_ColumnWidth}}" />
        <Setter Property="Width" Value="{Binding Source={StaticResource TitleRow_ColumnWidth}}" />
        <Setter Property="ImagePadding" Value="2,2,2,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SvgImageButton1}">
                    <Grid Name="ImageButtonGrid" Background="{TemplateBinding Background}">
                        <Border
                            Name="ImageButtonBorder"
                            Padding="{Binding ImagePadding, RelativeSource={RelativeSource TemplatedParent}}"
                            Margin="{Binding ImageMargin, RelativeSource={RelativeSource TemplatedParent}}"
                            CornerRadius="3"
                            BorderBrush="{Binding Source={StaticResource Control_Transparent_Brush}}"
                            BorderThickness="1">
                            <svg1:SVGImage Name="ImageContent" Source="{TemplateBinding DefaultImage}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" OverrideColor="{Binding Source={StaticResource Control_Foreground_Color}}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--Some triggers ( IsFocused, IsMouseOver, etc.)-->
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{Binding Source={StaticResource HeaderButtonBorder_Focused_Color}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ImageContent" Property="Source" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedImage}" />
                            <Setter TargetName="ImageButtonBorder" Property="BorderBrush" Value="{Binding Source={StaticResource HeaderButtonBorder_Focused_Color}}" />
                            <Setter Property="Background" Value="{Binding Source={StaticResource HeaderButton_Hover_Color}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ImageContent" Property="Source" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedImage}" />
                            <Setter TargetName="ImageContent" Property="OverrideColor" Value="{Binding Source={StaticResource Control_ForegroundPressed_Color}}" />
                            <Setter Property="Background" Value="{Binding Source={StaticResource HeaderButton_Pressed_Color}}" />
                            <Setter TargetName="ImageButtonBorder" Property="BorderBrush" Value="{Binding Source={StaticResource ActionButtonBorder_Focused_Color}}" />
                            <Setter TargetName="ImageButtonGrid" Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ImageContent" Property="Source" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DisabledImage}" />
                            <Setter TargetName="ImageContent" Property="OverrideColor" Value="{Binding Source={StaticResource Control_ForegroundDisabled_Color}}" />
                            <Setter TargetName="ImageButtonBorder" Property="Background" Value="{Binding Source={StaticResource HeaderButton_Pressed_Color}}" />
                            <Setter TargetName="ImageButtonBorder" Property="BorderBrush" Value="{Binding Source={StaticResource HeaderButtonBorder_Focused_Color}}" />
                            <Setter Property="Background" Value="{Binding Source={StaticResource HeaderButton_Pressed_Color}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SvgComplexConditionButton" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgHalfActionButtonSmallIconLayout}">
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabledCondition1" Value="True"/>
                    <Condition Property="IsEnabledCondition2" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="IsEnabled" Value="True"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabledCondition1" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="IsEnabled" Value="False"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabledCondition2" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="IsEnabled" Value="False"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--Main Window Controls-->
    <Style x:Key="SvgOpenFolderButton" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgHalfActionButtonLayout}">
        <Setter Property="DefaultImage" Value="/RecNForget.Controls;component/Themes/SvgImages/openFolder_icon356582.svg" />
        <Setter Property="DisabledImage" Value="/RecNForget.Controls;component/Themes/SvgImages/openFolder_icon356582.svg" />
        <Setter Property="SelectedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/openFolder_icon356582.svg" />
        <Setter Property="PressedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/openFolder_icon356582.svg" />
    </Style>

    <Style x:Key="SvgPrevTrackButton" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgComplexConditionButton}">
        <Setter Property="ImagePadding" Value="8,8,8,8" />
        <Setter Property="ImageMargin" Value="4,1,4,1" />
        <Setter Property="DefaultImage" Value="/RecNForget.Controls;component/Themes/SvgImages/prevTrack_icon.svg" />
        <Setter Property="DisabledImage" Value="/RecNForget.Controls;component/Themes/SvgImages/prevTrack_icon.svg" />
        <Setter Property="SelectedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/prevTrack_icon.svg" />
        <Setter Property="PressedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/prevTrack_icon.svg" />
    </Style>

    <Style x:Key="SvgNextTrackButton" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgComplexConditionButton}">
        <Setter Property="ImagePadding" Value="8,8,8,8" />
        <Setter Property="ImageMargin" Value="4,1,4,1" />
        <Setter Property="DefaultImage" Value="/RecNForget.Controls;component/Themes/SvgImages/nextTrack_icon.svg" />
        <Setter Property="DisabledImage" Value="/RecNForget.Controls;component/Themes/SvgImages/nextTrack_icon.svg" />
        <Setter Property="SelectedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/nextTrack_icon.svg" />
        <Setter Property="PressedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/nextTrack_icon.svg" />
    </Style>

    <Style x:Key="SvgPlayTrackButton" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgComplexConditionButton}">
        <Setter Property="ImagePadding" Value="4,4,4,4" />
        <Setter Property="DefaultImage" Value="/RecNForget.Controls;component/Themes/SvgImages/play_icon.svg" />
        <Setter Property="DisabledImage" Value="/RecNForget.Controls;component/Themes/SvgImages/play_icon.svg" />
        <Setter Property="SelectedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/play_icon.svg" />
        <Setter Property="PressedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/play_icon.svg" />
    </Style>

    <Style x:Key="SvgPauseTrackButton" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgComplexConditionButton}">
        <Setter Property="ImagePadding" Value="4,4,4,4" />
        <Setter Property="DefaultImage" Value="/RecNForget.Controls;component/Themes/SvgImages/pause_icon.svg" />
        <Setter Property="DisabledImage" Value="/RecNForget.Controls;component/Themes/SvgImages/pause_icon.svg" />
        <Setter Property="SelectedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/pause_icon.svg" />
        <Setter Property="PressedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/pause_icon.svg" />
    </Style>

    <Style x:Key="SvgStopButton" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgComplexConditionButton}">
        <Setter Property="DefaultImage" Value="/RecNForget.Controls;component/Themes/SvgImages/stop_icon.svg" />
        <Setter Property="DisabledImage" Value="/RecNForget.Controls;component/Themes/SvgImages/stop_icon.svg" />
        <Setter Property="SelectedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/stop_icon.svg" />
        <Setter Property="PressedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/stop_icon.svg" />
    </Style>

    <Style x:Key="SvgRecordButton" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgHalfActionButtonLayout}">
        <Setter Property="DefaultImage" Value="/RecNForget.Controls;component/Themes/SvgImages/record_icon.svg" />
        <Setter Property="DisabledImage" Value="/RecNForget.Controls;component/Themes/SvgImages/record_icon.svg" />
        <Setter Property="SelectedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/record_icon.svg" />
        <Setter Property="PressedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/record_icon.svg" />
    </Style>

    <Style x:Key="SvgStopRecordButton" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgHalfActionButtonLayout}">
        <Setter Property="ImagePadding" Value="5,5,5,5" />
        <Setter Property="DefaultImage" Value="/RecNForget.Controls;component/Themes/SvgImages/stop_icon.svg" />
        <Setter Property="DisabledImage" Value="/RecNForget.Controls;component/Themes/SvgImages/stop_icon.svg" />
        <Setter Property="SelectedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/stop_icon.svg" />
        <Setter Property="PressedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/stop_icon.svg" />
    </Style>

    <Style x:Key="SvgChangeFilePatternMiniButtonLayout" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgBaseMiniChangeSettingButtonLayout}">
        <Setter Property="Margin" Value="2,2,2,0" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="DefaultImage" Value="/RecNForget.Controls;component/Themes/SvgImages/pencil_icon79516.svg" />
        <Setter Property="DisabledImage" Value="/RecNForget.Controls;component/Themes/SvgImages/pencil_icon79516.svg" />
        <Setter Property="SelectedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/pencil_icon79516.svg" />
        <Setter Property="PressedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/pencil_icon79516.svg" />
    </Style>

    <Style x:Key="SvgChangeOutputFolderMiniButtonLayout" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgBaseMiniChangeSettingButtonLayout}">
        <Setter Property="Margin" Value="2,2,2,0" />
        <Setter Property="ImagePadding" Value="1,1,1,1" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="DefaultImage" Value="/RecNForget.Controls;component/Themes/SvgImages/folder_icon122592.svg" />
        <Setter Property="DisabledImage" Value="/RecNForget.Controls;component/Themes/SvgImages/folder_icon122592.svg" />
        <Setter Property="SelectedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/folder_icon122592.svg" />
        <Setter Property="PressedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/folder_icon122592.svg" />
    </Style>

    <Style x:Key="SvgDeleteSelectedFileMiniButtonLayout" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgBaseMiniChangeSettingButtonLayout}">
        <Setter Property="Margin" Value="2,2,2,0" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="DefaultImage" Value="/RecNForget.Controls;component/Themes/SvgImages/trash_icon77730.svg" />
        <Setter Property="DisabledImage" Value="/RecNForget.Controls;component/Themes/SvgImages/trash_icon77730.svg" />
        <Setter Property="SelectedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/trash_icon77730.svg" />
        <Setter Property="PressedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/trash_icon77730.svg" />
    </Style>
    
    <!--"general"/common buttons-->
    <Style x:Key="SvgAcceptButton" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgHalfActionButtonLayout}">
        <Setter Property="DefaultImage" Value="/RecNForget.Controls;component/Themes/SvgImages/accept_icon518267.svg" />
        <Setter Property="DisabledImage" Value="/RecNForget.Controls;component/Themes/SvgImages/accept_icon518267.svg" />
        <Setter Property="SelectedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/accept_icon518267.svg" />
        <Setter Property="PressedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/accept_icon518267.svg" />
    </Style>

    <Style x:Key="SvgChangeSettingButtonLayout" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgBaseButtonLayout}">
        <Setter Property="Height" Value="{Binding Source={StaticResource TitleRow_ColumnWidth}}" />
        <Setter Property="Width" Value="{Binding Source={StaticResource TitleRow_ColumnWidth}}" />
        <Setter Property="DefaultImage" Value="/RecNForget.Controls;component/Themes/SvgImages/editSetting_icon451737.svg" />
        <Setter Property="DisabledImage" Value="/RecNForget.Controls;component/Themes/SvgImages/editSetting_icon451737.svg" />
        <Setter Property="SelectedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/editSetting_icon451737.svg" />
        <Setter Property="PressedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/editSetting_icon451737.svg" />
    </Style>


    <!-- Window Header Controls-->
    <Style x:Key="SvgWindowSettingsButton" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgBaseHeaderButtonLayout}">
        <Setter Property="DefaultImage" Value="/RecNForget.Controls;component/Themes/SvgImages/windowSettings_icon248857.svg" />
        <Setter Property="DisabledImage" Value="/RecNForget.Controls;component/Themes/SvgImages/windowSettings_icon248857.svg" />
        <Setter Property="SelectedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/windowSettings_icon248857.svg" />
        <Setter Property="PressedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/windowSettings_icon248857.svg" />
    </Style>
    <Style x:Key="SvgSettingsButton" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgBaseHeaderButtonLayout}">
        <Setter Property="DefaultImage" Value="/RecNForget.Controls;component/Themes/SvgImages/settings_icon40863.svg" />
        <Setter Property="DisabledImage" Value="/RecNForget.Controls;component/Themes/SvgImages/settings_icon40863.svg" />
        <Setter Property="SelectedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/settings_icon40863.svg" />
        <Setter Property="PressedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/settings_icon40863.svg" />
    </Style>
    <Style x:Key="SvgMinimizeButton" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgBaseHeaderButtonLayout}">
        <Setter Property="DefaultImage" Value="/RecNForget.Controls;component/Themes/SvgImages/minimize_icon246566.svg" />
        <Setter Property="DisabledImage" Value="/RecNForget.Controls;component/Themes/SvgImages/minimize_icon246566.svg" />
        <Setter Property="SelectedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/minimize_icon246566.svg" />
        <Setter Property="PressedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/minimize_icon246566.svg" />
    </Style>
    <Style x:Key="SvgExitButton" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgBaseHeaderButtonLayout}">
        <Setter Property="DefaultImage" Value="/RecNForget.Controls;component/Themes/SvgImages/close_icon349388.svg" />
        <Setter Property="DisabledImage" Value="/RecNForget.Controls;component/Themes/SvgImages/close_icon349388.svg" />
        <Setter Property="SelectedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/close_icon349388.svg" />
        <Setter Property="PressedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/close_icon349388.svg" />
    </Style>

    <!-- /Mini Buttons for Main Window Sub Controls-->
    <Style x:Key="SvgLightBulbButton" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgHalfActionButtonLayout}">
        <Setter Property="DefaultImage" Value="/RecNForget.Controls;component/Themes/SvgImages/lightbulb_icon372420.svg" />
        <Setter Property="DisabledImage" Value="/RecNForget.Controls;component/Themes/SvgImages/lightbulb_icon372420.svg" />
        <Setter Property="SelectedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/lightbulb_icon372420.svg" />
        <Setter Property="PressedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/lightbulb_icon372420.svg" />
    </Style>
    <Style x:Key="SvgDownloadButton" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgHalfActionButtonLayout}">
        <Setter Property="DefaultImage" Value="/RecNForget.Controls;component/Themes/SvgImages/download_icon602.svg" />
        <Setter Property="DisabledImage" Value="/RecNForget.Controls;component/Themes/SvgImages/download_icon602.svg" />
        <Setter Property="SelectedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/download_icon602.svg" />
        <Setter Property="PressedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/download_icon602.svg" />
    </Style>
    <Style x:Key="SvgCancelButton" TargetType="{x:Type local:SvgImageButton1}" BasedOn="{StaticResource SvgHalfActionButtonLayout}">
        <Setter Property="DefaultImage" Value="/RecNForget.Controls;component/Themes/SvgImages/cancel_icon428740.svg" />
        <Setter Property="DisabledImage" Value="/RecNForget.Controls;component/Themes/SvgImages/cancel_icon428740.svg" />
        <Setter Property="SelectedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/cancel_icon428740.svg" />
        <Setter Property="PressedImage" Value="/RecNForget.Controls;component/Themes/SvgImages/cancel_icon428740.svg" />
    </Style>
    <!-- /==================================================  Buttons  ===================================================================================================================  -->


    <Style x:Key="HelpTopicButtonLayout" TargetType="{x:Type Button}">
        <!-- Some setters -->
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="ButtonBorder"
                       BorderThickness="1"
                       Padding="2,2,2,2"
                       BorderBrush="{Binding Source={StaticResource Application_Background_Color}}"
                       CornerRadius="3"
                       Background="{TemplateBinding Background}">
                        <Grid Name="ButtonGrid">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Name="content"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{Binding Source={StaticResource ActionButtonBorder_Focused_Color}}" />
                            <Setter Property="Background" Value="{Binding Source={StaticResource ActionButtonBorder_Focused_Color}}" />
                            <Setter Property="Foreground" Value="{Binding Source={StaticResource Application_Background_Color}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{Binding Source={StaticResource ActionButtonBorder_Focused_Color}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{Binding Source={StaticResource ActionButtonBorder_Focused_Color}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ===================================================  Windows  ===================================================================================================================  -->

    <Style x:Key="DefaultWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
    </Style>

    <Style x:Key="Info_WindowStyle" TargetType="{x:Type Window}" BasedOn="{StaticResource DefaultWindowStyle}">
        <Setter Property="MaxWidth" Value="600" />
    </Style>

    <!-- /==================================================  Windows  ===================================================================================================================  -->
    
    <!-- ===================================================  TitleBars  =================================================================================================================  -->

    <Style x:Key="TitleBarLayout" TargetType="{x:Type Label}">
        <!-- Some setters -->
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border Name="ImageButtonBorder"
                       BorderThickness="0"
                       Padding="0,0,0,0"
                       BorderBrush="{Binding Source={StaticResource Application_Background_Color}}"
                       CornerRadius="3"
                       Background="{TemplateBinding Background}">
                        <Grid Background="{Binding Source={StaticResource Application_Background_Color}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="{Binding Source={StaticResource TitleRow_ColumnWidth}}" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding Source={StaticResource TitleRow_ColumnWidth}}" />
                                <ColumnDefinition Width="{Binding Source={StaticResource TitleRow_ColumnWidth}}" />
                                <ColumnDefinition Width="{Binding Source={StaticResource TitleRow_ColumnWidth}}" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="{Binding Source={StaticResource TitleRow_ColumnWidth}}" />
                                <ColumnDefinition Width="{Binding Source={StaticResource TitleRow_ColumnWidth}}" />
                                <ColumnDefinition Width="{Binding Source={StaticResource TitleRow_ColumnWidth}}" />
                            </Grid.ColumnDefinitions>

                            <local:SvgImageButton1 Grid.Row="0" Grid.Column="6" Grid.ColumnSpan="1" Style="{StaticResource SvgExitButton}" IsCancel="True" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- /==================================================  TitleBars  =================================================================================================================  -->

    <!-- ===================================================  Grids  =====================================================================================================================  -->

    <Style x:Key="DefaultGridStyle" TargetType="Grid">
        <Setter Property="Background" Value="{Binding Source={StaticResource Application_Background_Color}}" />
    </Style>

    <Style x:Key="GrowForContainedControlsRowStyle" TargetType="RowDefinition">
        <Setter Property="Height" Value="Auto" />
    </Style>

    <Style x:Key="GrowForRemainingSpaceRowStyle" TargetType="RowDefinition">
        <Setter Property="Height" Value="*" />
    </Style>

    <Style x:Key="ParagaphSeparatorRowStyle" TargetType="RowDefinition">
        <Setter Property="Height" Value="{Binding Source={StaticResource Paragraph_Separator_Height}}" />
    </Style>

    <Style x:Key="ControlSeparatorRowStyle" TargetType="RowDefinition">
        <Setter Property="Height" Value="{Binding Source={StaticResource Control_Separator_Height}}" />
    </Style>

    <Style x:Key="GrowForContainedControlsColumnStyle" TargetType="ColumnDefinition">
        <Setter Property="Width" Value="Auto" />
    </Style>

    <Style x:Key="GrowForRemainingSpaceColumnStyle" TargetType="ColumnDefinition">
        <Setter Property="Width" Value="*" />
    </Style>

    <!-- /==================================================  Grids  =====================================================================================================================  -->

    <!-- ===================================================  Checkboxes  ================================================================================================================  -->

    <!-- https://github.com/0xdeafcafe/MetroWPFTemplate/blob/master/Metro%20WPF%20Template/Metro/Controls/MetroCheckBox.xaml-->
    <Style x:Key="DefaultCheckboxStyle" TargetType="CheckBox">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Margin" Value="1,1,1,1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource Default_FontSize}}" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Foreground" Value="{Binding Source={StaticResource Font_Color}}"/>
        <Setter Property="Background" Value="{Binding Source={StaticResource ActionButtonRow_Background_Color}}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border
                       BorderThickness="1"
                       Padding="0,0,0,0"
                       Margin="0,0,0,0"
                       BorderBrush="{Binding Source={StaticResource ActionButtonBorder_Color}}"
                       CornerRadius="3"
                       Background="{Binding Source={StaticResource Application_Background_Color}}">
                        <BulletDecorator x:Name="ContentPart" Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border"  
                                    Width="{Binding Source={StaticResource CheckBox_Width}}" 
                                    Height="{Binding Source={StaticResource CheckBox_Width}}"
                                    Padding="1,1,1,1"
                                    CornerRadius="3" 
                                    Background="{Binding Source={StaticResource Font_Color}}"
                                    BorderBrush="{Binding Source={StaticResource ActionButtonRow_Background_Color}}"
                                    BorderThickness="1">
                                    <Image x:Name="CheckMark" Source="ButtonImages\accept_icon518267.black.white.png" VerticalAlignment="Bottom" />
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter
                                Margin="8,0,0,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                RecognizesAccessKey="True"/>
                        </BulletDecorator>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter Property="Foreground" Value="{Binding Source={StaticResource Font_Color_Disabled}}"/>
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ContentPart" Property="Background" Value="{Binding Source={StaticResource ActionButtonBorder_Color}}"/>
                            <Setter TargetName="Border" Property="Background" Value="{Binding Source={StaticResource Application_Background_Color}}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Foreground" Value="{Binding Source={StaticResource Font_Color}}"/>
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{Binding Source={StaticResource Application_Background_Color}}" />
                            <Setter TargetName="Border" Property="Background" Value="{Binding Source={StaticResource Font_Color}}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Gainsboro" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- /==================================================  Checkboxes  ================================================================================================================  -->

    <!-- ===================================================  HotkeyDisplays  ============================================================================================================  -->

    <Style x:Key="HotkeyDisplayButton" TargetType="{x:Type Button}">
        <!--<Setter Property="Padding" Value="1,3,1,3" />-->
        <Setter Property="Margin" Value="0,1,0,1" />
        <Setter Property="Height" Value="23" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource Default_FontSize}}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style x:Key="HotkeyDisplayStackPanel" TargetType="StackPanel">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Margin" Value="1,1,1,0" />
        <Setter Property="Height" Value="{Binding Source={StaticResource ChangeSettingButton_Width}}" />
        <Setter Property="Width" Value="{Binding Source={StaticResource SettingTextBox_Width}}" />
    </Style>

    <Style x:Key="HotkeyPrompt_DisplayStackPanel" TargetType="StackPanel">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Width" Value="{StaticResource HotkeyPromptWindow_Width}" />
        <Setter Property="Height" Value="{Binding Source={StaticResource ChangeSettingButton_Width}}" />
    </Style>

    <Style x:Key="AutoSizeHotkeyDisplayStackPanel" TargetType="StackPanel">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Margin" Value="1,1,1,0" />
    </Style>

    <!-- /==================================================  HotkeyDisplays  ============================================================================================================  -->

    <!-- ===================================================  Labels  ====================================================================================================================  -->

    <Style x:Key="DefaultLabelStyle" TargetType="Label">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Margin" Value="3,0,0,2" />
        <Setter Property="Height" Value="13" />
        <Setter Property="Width" Value="281" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource SmallCaption_FontSize}}" />
    </Style>

    <Style x:Key="ControlLabelStyle" TargetType="Label">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Margin" Value="3,0,0,2" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="281" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource SmallCaption_FontSize}}" />
    </Style>

    <Style x:Key="HeadlineLabelStyle" TargetType="Label">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Margin" Value="3,0,0,2" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Width" Value="500" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource Heading_3_FontSize}}" />
    </Style>

    <Style x:Key="SettingLabelStyle" TargetType="Label">
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Margin" Value="3,0,0,2" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource Default_FontSize}}" />
        <Setter Property="Background" Value="{Binding Source={StaticResource Application_Background_Color}}"/>
    </Style>

    <Style x:Key="SettingTextBoxLabelStyle" TargetType="Label">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Margin" Value="1,1,0,0" />
        <Setter Property="Height" Value="{Binding Source={StaticResource ChangeSettingButton_Width}}" />
        <Setter Property="Width" Value="130" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource Default_FontSize}}" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <!--<Setter Property="FontFamily" Value="{DynamicResource MetroFontRegular}"/>-->
        <Setter Property="Foreground" Value="{Binding Source={StaticResource Font_Color}}"/>
        <Setter Property="Background" Value="{Binding Source={StaticResource Application_Background_Color}}"/>
        <Setter Property="FontSize" Value="{Binding Source={StaticResource Default_FontSize}}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Border x:Name="Border"  
                       BorderThickness="1,1,0,1"
                       Padding="1,0,0,0"
                       Margin="0,0,0,0"
                       BorderBrush="{Binding Source={StaticResource Application_Background_Color}}"
                       CornerRadius="3,0,0,3"
                       Background="{TemplateBinding Background}">
                        <BulletDecorator x:Name="ContentPart" Background="Transparent">
                            <ContentPresenter Content="{TemplateBinding Content}"
                            Margin="0,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True"/>
                        </BulletDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- /==================================================  Labels  ====================================================================================================================  -->

    <!-- ===================================================  Separators  ================================================================================================================  -->

    <Style x:Key="DefaultSeparatorStyle" TargetType="Rectangle">
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Fill" Value="{Binding Source={StaticResource Application_Background_Color}}" />
    </Style>

    <!-- /==================================================  Separators  ================================================================================================================  -->

    <!-- ===================================================  TextBlocks  ================================================================================================================  -->

    <Style x:Key="DefaultTextBlockStyle" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Margin" Value="3,0,0,2" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource Default_FontSize}}" />
    </Style>

    <Style x:Key="CustomMessageBox_TextBlock_Style" TargetType="TextBlock" BasedOn="{StaticResource DefaultTextBlockStyle}">
        <Setter Property="MaxWidth" Value="500" />
    </Style>

    <Style x:Key="ApplicationName_TextBox_Style" TargetType="TextBlock">
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource Heading_1_FontSize}}" />
    </Style>

    <Style x:Key="VersionName_TextBox_Style" TargetType="TextBlock">
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource Heading_2_FontSize}}" />
    </Style>

    <!-- /==================================================  TextBlocks  ================================================================================================================  -->

    <!-- ===================================================  TextBoxes  =================================================================================================================  -->

    <Style x:Key="MainWindowTextBoxStyle" TargetType="TextBox">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Width" Value="{StaticResource MainWindow_TextBox_Width}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="Height" Value="{Binding Source={StaticResource MainWindowControl_Height}}" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource Default_FontSize}}" />
        <Setter Property="IsEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border CornerRadius="3" Padding="1" x:Name="InnerBorder" Background="{Binding Source={StaticResource Application_Background_Color}}" BorderBrush="{Binding Source={StaticResource ApplicationBorder_Color}}" BorderThickness="0,0,0,0">
                        <ScrollViewer Padding="0" Margin="0" Background="{Binding Source={StaticResource Application_Background_Color}}" VerticalContentAlignment="Bottom" VerticalAlignment="Bottom" x:Name="PART_ContentHost" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="InnerBorder" Property="Background" Value="{Binding Source={StaticResource Application_Background_Color}}"/>
                            <Setter TargetName="InnerBorder" Property="BorderThickness" Value="0,0,0,1"/>
                            <Setter TargetName="PART_ContentHost" Property="Background" Value="{Binding Source={StaticResource Application_Background_Color}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SettingTextBoxStyle" TargetType="TextBox">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Margin" Value="1,1,1,0" />
        <Setter Property="Height" Value="{Binding Source={StaticResource ChangeSettingButton_Width}}" />
        <Setter Property="Width" Value="{Binding Source={StaticResource SettingTextBox_Width}}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource Default_FontSize}}" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <!--<Setter Property="FontFamily" Value="{DynamicResource MetroFontRegular}"/>-->
        <Setter Property="Foreground" Value="{Binding Source={StaticResource Font_Color}}"/>
        <Setter Property="Background" Value="{Binding Source={StaticResource Application_Background_Color}}"/>
        <Setter Property="FontSize" Value="{Binding Source={StaticResource Default_FontSize}}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="Border"  
                       BorderThickness="0,1,1,0"
                       Padding="1,0,0,0"
                       Margin="0,0,0,0"
                       BorderBrush="{Binding Source={StaticResource Application_Background_Color}}"
                       CornerRadius="0,0,0,0"
                       Background="{TemplateBinding Background}">
                        <BulletDecorator x:Name="ContentPart" Background="Transparent">
                            <ContentPresenter Content="{TemplateBinding Text}"
                            Margin="0,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True"/>
                        </BulletDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PatchNotesTextBoxStyle" TargetType="TextBox">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="1,1,1,0" />
        <Setter Property="Height" Value="{Binding Source={StaticResource PatchNotes_TextBox_Height}}" />
        <Setter Property="Width" Value="{Binding Source={StaticResource PatchNotes_TextBox_Width}}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource Default_FontSize}}" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <!--<Setter Property="FontFamily" Value="{DynamicResource MetroFontRegular}"/>-->
        <Setter Property="Foreground" Value="{Binding Source={StaticResource Font_Color}}"/>
        <Setter Property="Background" Value="{Binding Source={StaticResource HeaderButton_Disabled_Color}}"/>
        <Setter Property="FontSize" Value="{Binding Source={StaticResource Default_FontSize}}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="Border"  
                       BorderThickness="0,1,1,0"
                       Padding="1,0,0,0"
                       Margin="0,0,0,0"
                       BorderBrush="{Binding Source={StaticResource HeaderButton_Disabled_Color}}"
                       CornerRadius="0,0,0,0"
                       Background="{TemplateBinding Background}">
                        <BulletDecorator x:Name="ContentPart" Background="Transparent">
                            <ContentPresenter Content="{TemplateBinding Text}"
                            Margin="0,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True"/>
                        </BulletDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- /==================================================  TextBoxes  =================================================================================================================  -->

    <!-- ===================================================  ContextMenues  =============================================================================================================  -->

    <Style x:Key="ContextMenu_Default_Style" TargetType="ContextMenu">
        <Setter Property="Background" Value="{Binding Source={StaticResource Application_Background_Color}}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border"
                        Background="{Binding Source={StaticResource Application_Background_Color}}"
                        CornerRadius="3"
                        BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#FF888888" />
                        </Border.BorderBrush>
                        <StackPanel IsItemsHost="True"
                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Base_ContextMenu_MenuItem_Style" TargetType="MenuItem">
        <!--<Setter Property="Background" Value="{Binding Source={StaticResource Application_Background_Color}}" />-->
        <Setter Property="Margin" Value="0,2,0,2" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource Default_FontSize}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="MenuItemBorder" Padding="5,0,5,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <StackPanel>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="23" />
                                    <ColumnDefinition Width="7" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <ContentPresenter x:Name="Icon" ContentSource="Icon" Grid.Column="0" Grid.Row="0" />
                                <BulletDecorator x:Name="CheckMarkPicture" Grid.Column="0" Grid.Row="0"
                                    Background="Transparent"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center">
                                    <BulletDecorator.Bullet>
                                        <Border x:Name="Border"  
                                            Width="{Binding Source={StaticResource CheckBox_Width}}" 
                                            Height="{Binding Source={StaticResource CheckBox_Width}}"
                                            Padding="1,1,1,1"
                                            CornerRadius="3" 
                                            Background="{Binding Source={StaticResource Font_Color}}"
                                            BorderBrush="{Binding Source={StaticResource ActionButtonRow_Background_Color}}"
                                            BorderThickness="1">
                                            <Image x:Name="CheckMark" Width="23" Source="ButtonImages\accept_icon518267.black.white.png" VerticalAlignment="Bottom" />
                                        </Border>
                                    </BulletDecorator.Bullet>
                                </BulletDecorator>
                                <!-- Content for the menu text etc -->
                                <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" Grid.Column="2" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            </Grid>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" TargetName="MenuItemBorder" Value="{Binding Source={StaticResource HeaderButton_Hover_Color}}"/>
                            <Setter Property="BorderBrush" TargetName="MenuItemBorder" Value="{Binding Source={StaticResource HeaderButton_Hover_Color}}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" TargetName="CheckMarkPicture" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="Icon" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="CheckMarkPicture" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="Image">
                <Setter Property="Width" Value="25" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="MenuSeparator_Style" TargetType="Separator">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border HorizontalAlignment="Stretch" Height="1" Margin="4" BorderThickness="1" BorderBrush="#FF888888"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- context menu image styles-->

    <Style x:Key="ContextMenu_Cancel_Style" TargetType="MenuItem" BasedOn="{StaticResource Base_ContextMenu_MenuItem_Style}">
        <Setter Property="Icon">
            <Setter.Value>
                <svg1:SVGImage Width="23"
                    Source="/RecNForget.Controls;component/Themes/SvgImages/cancel_icon428740.svg"
                    VerticalContentAlignment="Center"
                    HorizontalContentAlignment="Center"
                    OverrideColor="{Binding Source={StaticResource Control_Foreground_Color}}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContextMenu_Settings_Style" TargetType="MenuItem" BasedOn="{StaticResource Base_ContextMenu_MenuItem_Style}">
        <Setter Property="Icon">
            <Setter.Value>
                <svg1:SVGImage Width="23"
                    Source="/RecNForget.Controls;component/Themes/SvgImages/settings_icon40863.svg"
                    VerticalContentAlignment="Center"
                    HorizontalContentAlignment="Center"
                    OverrideColor="{Binding Source={StaticResource Control_Foreground_Color}}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContextMenu_About_Style" TargetType="MenuItem" BasedOn="{StaticResource Base_ContextMenu_MenuItem_Style}">
        <Setter Property="Icon">
            <Setter.Value>
                <svg1:SVGImage Width="23"
                    Source="/RecNForget.Controls;component/Themes/SvgImages/information_icon280732.svg"
                    VerticalContentAlignment="Center"
                    HorizontalContentAlignment="Center"
                    OverrideColor="{Binding Source={StaticResource Control_Foreground_Color}}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContextMenu_Help_Style" TargetType="MenuItem" BasedOn="{StaticResource Base_ContextMenu_MenuItem_Style}">
        <Setter Property="Icon">
            <Setter.Value>
                <svg1:SVGImage Width="23"
                    Source="/RecNForget.Controls;component/Themes/SvgImages/help_icon544157.svg"
                    VerticalContentAlignment="Center"
                    HorizontalContentAlignment="Center"
                    OverrideColor="{Binding Source={StaticResource Control_Foreground_Color}}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContextMenu_CheckUpdates_Style" TargetType="MenuItem" BasedOn="{StaticResource Base_ContextMenu_MenuItem_Style}">
        <Setter Property="Icon">
            <Setter.Value>
                <svg1:SVGImage Width="23"
                    Source="/RecNForget.Controls;component/Themes/SvgImages/download_icon602.svg"
                    VerticalContentAlignment="Center"
                    HorizontalContentAlignment="Center"
                    OverrideColor="{Binding Source={StaticResource Control_Foreground_Color}}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContextMenu_ShutDown_Style" TargetType="MenuItem" BasedOn="{StaticResource Base_ContextMenu_MenuItem_Style}">
        <Setter Property="Icon">
            <Setter.Value>
                <svg1:SVGImage Width="23"
                    Source="/RecNForget.Controls;component/Themes/SvgImages/shutDown_icon170336.svg"
                    VerticalContentAlignment="Center"
                    HorizontalContentAlignment="Center"
                    OverrideColor="{Binding Source={StaticResource Control_Foreground_Color}}" />
            </Setter.Value>
        </Setter>
    </Style>

    <!-- /==================================================  ContextMenues  =============================================================================================================  -->

    <!-- ===================================================  ProgressBars  ==============================================================================================================  -->

    <Style x:Key="Default_ProgressBar_Style" TargetType="{x:Type ProgressBar}">
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="Maximum" Value="100"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="{StaticResource ButtonRow_Height}" />
    </Style>

    <Style x:Key="Default_ProgressBar_TextBlock_Style" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- /==================================================  ProgressBars  ==============================================================================================================  -->

    <!-- ===================================================  HyperLinks  ================================================================================================================  -->

    <Style x:Key="Default_Hyperlink_Style" TargetType="Hyperlink">
        <Setter Property="TextDecorations" Value="None" />
    </Style>

    <!-- /==================================================  HyperLinks  ================================================================================================================  -->

    <!-- ===================================================  ScrollViewers  =============================================================================================================  -->

    <!-- left/right or top/left scroll buttons  -->
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="Border"
                        Margin="1"
                        CornerRadius="2"
                        BorderThickness="1"
                        BorderBrush="{Binding Source={StaticResource Application_Background_Color}}"
                        Background="{Binding Source={StaticResource Application_Background_Color}}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                                Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(BorderBrush).Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{Binding Source={StaticResource ApplicationBorder_Color}}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{Binding Source={StaticResource HeaderRow_Background_Color}}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                            x:Name="Arrow">
                            <Path.Fill>
                                <SolidColorBrush Color="{Binding Source={StaticResource ApplicationBorder_Color}}"/>
                            </Path.Fill>
                        </Path>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- handle bar for scrolling -->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="2"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="18" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3"
                CornerRadius="2"
                Background="{Binding Source={StaticResource Application_Background_Color}}" />
            <RepeatButton Grid.Row="0"
                Style="{StaticResource ScrollBarLineButton}"
                Height="18"
                Command="ScrollBar.LineUpCommand"
                Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track
                Grid.Row="1"
                IsDirectionReversed="true"
                x:Name="PART_Track">
                <!-- thumb is the actual draggable scroll bar -->
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                        Margin="1,0,1,0"
                        BorderBrush="{Binding Source={StaticResource ApplicationBorder_Color}}"
                        Background="{Binding Source={StaticResource Application_Background_Color}}" />
                </Track.Thumb>
            </Track>
            <RepeatButton Grid.Row="2" Style="{StaticResource ScrollBarLineButton}"
                Height="18"
                Command="ScrollBar.LineDownCommand"
                Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="18" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3"
                CornerRadius="2"
                Background="{Binding Source={StaticResource Application_Background_Color}}" />
            <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}"
                  Width="18"
                  Command="ScrollBar.LineLeftCommand"
                  Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track x:Name="PART_Track"
               Grid.Column="1"
               IsDirectionReversed="False">
                <!-- thumb is the actual draggable scroll bar -->
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                        Margin="0,1,0,1"
                        BorderBrush="{Binding Source={StaticResource ApplicationBorder_Color}}"
                        Background="{Binding Source={StaticResource Application_Background_Color}}" />
                </Track.Thumb>
            </Track>
            <RepeatButton Grid.Column="2"
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="18"
                  Command="ScrollBar.LineRightCommand"
                  Content="M 0 0 L 4 4 L 0 8 Z" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}"
       TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="15" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="15" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Default_ScrollViewer_Style" TargetType="ScrollViewer">
        <Setter Property="MaxHeight" Value="300" />
        <Setter Property="Margin" Value="5,0,5,0" />
        <Setter Property="Background" Value="{Binding Source={StaticResource Application_Background_Color}}" />
    </Style>

    <Style x:Key="PatchNotes_ScrollViewer_Style" TargetType="ScrollViewer">
        <Setter Property="Height" Value="{StaticResource PatchNotes_TextBox_Height}" />
        <Setter Property="Width" Value="{StaticResource PatchNotes_TextBox_Width}" />
        <Setter Property="Margin" Value="0,0,5,0" />
        <Setter Property="Background" Value="{Binding Source={StaticResource Application_Background_Color}}" />
    </Style>

    <Style x:Key="HelpTopicList_ScrollViewer_Style" TargetType="ScrollViewer">
        <Setter Property="Height" Value="500" />
        <Setter Property="Margin" Value="0,0,5,0" />
        <Setter Property="Background" Value="{Binding Source={StaticResource Application_Background_Color}}" />
    </Style>

    <Style x:Key="HelpTopic_ScrollViewer_Style" TargetType="ScrollViewer">
        <Setter Property="Height" Value="500" />
        <Setter Property="Width" Value="600" />
        <Setter Property="Margin" Value="0,0,5,0" />
        <Setter Property="Background" Value="{Binding Source={StaticResource Application_Background_Color}}" />
    </Style>

    <Style x:Key="NewToVersion_FeatureList_ScrollViewer_Style" TargetType="ScrollViewer">
        <Setter Property="MaxHeight" Value="200" />
        <Setter Property="Margin" Value="0,0,5,0" />
        <Setter Property="Background" Value="{Binding Source={StaticResource Application_Background_Color}}" />
    </Style>

    <Style x:Key="QuickTip_ScrollViewer_Style" TargetType="ScrollViewer">
        <Setter Property="Height" Value="150" />
        <Setter Property="Width" Value="600" />
        <Setter Property="Margin" Value="0,0,5,0" />
        <Setter Property="Background" Value="{Binding Source={StaticResource Application_Background_Color}}" />
    </Style>

    <!-- /==================================================  ScrollViewers  =============================================================================================================  -->

    <!-- =================================================================================================================================================================================  -->
    <!-- /================================================================================================================================================================================  -->


</ResourceDictionary>